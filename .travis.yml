language: generic

sudo: required

services:
  - docker

before_install:
  # '-f'은 Dockerfile.dev 를 사용하기 위해서 Dockerfile.dev 파일명을 명시하기 위해 씀.
  - docker build -t seongmin082/react-test-app -f ./frontend/Dockerfile.dev ./frontend

script:
  - docker run -e CI=true seongmin082/react-test-app npm run test

after_success:
  # 운영버전 이미지 빌드
  - docker build -t seongmin082/docker-frontend  ./frontend
  - docker build -t seongmin082/docker-backend   ./backend
  - docker build -t seongmin082/docker-nginx     ./nginx

  # 도커 허브에 로그인
  - echo "$DOCKER_HUB_PASSWORD" | docker login -u "$DOCKER_HUB_ID" --password-stdin

  # 도커 허브에 푸시하기
  - docker push seongmin082/docker-frontend
  - docker push seongmin082/docker-backend
  - docker push seongmin082/docker-nginx

## 배포 부분
deploy:
  provider: elasticbeanstalk
  region: "us-east-2"
  app: "docker-fullstack-app1"
  env: "DockerFullstackApp1-env"

  bucket_name: "elasticbeanstalk-us-east-2-789250854600"

  # 어플리케이션의 이름과 동일
  bucket_path: "docker-fullstack-app1"

  # 어떤 브랜치에 Push를 할 때 AWS에 배포를 할 것인지.
  on:
    branch: master
  # secret_access_key의 줄과 동일하게 해서 써주기
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_ACCESS_KEY